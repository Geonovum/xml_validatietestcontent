<?xml version="1.0" encoding="utf-8"?>
<project basedir="." name="tpod" default="main">

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="xmltask.jar;saxon9he.jar"/>

  <property name="input.dir" value="bron"/>
  <property name="output.dir" value="resultaat"/>
  <property name="temp.dir" value="temp"/>
  <property name="work.dir" value="temp"/>

  <!-- initialiseer mappen -->

  <target name="init" description="Initialiseer mappen">
    <delete dir="${output.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${output.dir}"/>
    <delete dir="${temp.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${temp.dir}"/>
  </target>

  <!-- kopieer bestanden naar resultaat -->

  <target name="copy" description="Kopieer bestanden">
    <copy todir="${output.dir}">
      <fileset dir="${input.dir}"/>
    </copy>
  </target>

  <!-- maak parameters -->

  <path id="input.list">
    <fileset dir="${input.dir}" includes="*.xml *.gml"/>
  </path>
  <path id="basedir" path="${basedir}"/>

  <if>
    <os family="unix"/>
    <then>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="unix"/>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="unix"/>
    </then>
    <else>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
    </else>
  </if>


  <target name="index" description="Creëert een index van de soorten bestanden waaruit de dataset bestaat.">
    <property environment="env"/>
    <!-- creeert een index-file voor latere infrastructuur van data, het levert een index1.xml af. -->
    <xslt in="template.xml" out="${temp.dir}/index1.xml" style="index.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar"/>
      <param name="file.list" expression="${file.list}"/>
      <param name="base.dir" expression="${base.dir}"/>
      <!-- The orgfiledir bevat het test-validatie-bestand dat wordt aangeboden. Bijvoorbeeld LVBB1013 -->
      <param name="org.file.dir" expression="${env.orgfiledir}"/>
    </xslt>
    <!-- Haalt de duplicate entries uit de index en gebruikt hiervoor de index1.xml -->
    <xslt in="${temp.dir}/index1.xml" out="${temp.dir}/index.xml" style="filter-dupes.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar"/>
    </xslt>
    <delete file="${temp.dir}/index1.xml"></delete>
  </target>

  <target name="guids" description="Creëert een juiste aantal guids benodigd en verwerkt die in GML-bestanden en referenties.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/guids/guid">
        <param name="gmlfile.name" path="@gmlfile"/>
        <param name="locatiefile.name" path="@locatiefile"/>
        <param name="oldGUID" path="org/text()"/>
        <param name="newGUID" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{gmlfile.name}" out="${temp.dir}/@{gmlfile.name}" extension=".gml" style="guids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldGUID" expression="@{oldGUID}"/>
            <param name="newGUID" expression="@{newGUID}"/>
          </xslt>
          <copy file="${temp.dir}/@{gmlfile.name}" tofile="${output.dir}/@{gmlfile.name}"/>
          <xslt in="${output.dir}/@{locatiefile.name}" out="${temp.dir}/@{locatiefile.name}" extension=".xml" style="guids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldGUID" expression="@{oldGUID}"/>
            <param name="newGUID" expression="@{newGUID}"/>
          </xslt>
          <copy file="${temp.dir}/@{locatiefile.name}" tofile="${output.dir}/@{locatiefile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="owids" description="Verandert owids door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/owids/owid">
        <param name="owfile.name" path="@sourcefile"/>
        <param name="oldOWId" path="org/text()"/>
        <param name="newOWId" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{owfile.name}" out="${temp.dir}/@{owfile.name}" extension=".xml" style="owids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldOWId" expression="@{oldOWId}"/>
            <param name="newOWId" expression="@{newOWId}"/>
          </xslt>
          <copy file="${temp.dir}/@{owfile.name}" tofile="${output.dir}/@{owfile.name}"/>
        </actions>
      </call>
    </xmltask>
    
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/owids/owid/referencefile">
        <param name="referencefile.name" path="text()"/>
        <param name="oldOWId" path="../org/text()"/>
        <param name="newOWId" path="../new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{referencefile.name}" out="${temp.dir}/@{referencefile.name}" extension=".xml" style="owids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldOWId" expression="@{oldOWId}"/>
            <param name="newOWId" expression="@{newOWId}"/>
          </xslt>
          <copy file="${temp.dir}/@{referencefile.name}" tofile="${output.dir}/@{referencefile.name}"/>
        </actions>
      </call>
    </xmltask>
    
  </target>

  <target name="leveringid_opdrachtparameters" description="Verandert leveringid en enkele andere parameters in opdracht en ow-bestanden door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/leveringId">
        <param name="opdracht.name" path="@sourcefile"/>
        <param name="oldId" path="org/text()"/>
        <param name="newId" path="new/text()"/>
        <!-- LET OP NIET IN STANDAARD UNIFICERING -->
        <param name="testId" path="../testId/text()"/>
        <actions>
          <xslt in="${output.dir}/@{opdracht.name}" out="${temp.dir}/@{opdracht.name}" extension=".xml" style="leveringid_opdracht.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldId" expression="@{oldId}"/>
            <param name="newId" expression="@{newId}"/>
            <!-- LET OP NIET IN STANDAARD UNIFICERING -->
            <param name="testId" expression="@{testId}"/>
          </xslt>
          <copy file="${temp.dir}/@{opdracht.name}" tofile="${output.dir}/@{opdracht.name}"/>
        </actions>
      </call>
    </xmltask>
    
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/leveringId/referencefile">
        <param name="referencefile.name" path="text()"/>
        <param name="oldId" path="../org/text()"/>
        <param name="newId" path="../new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{referencefile.name}" out="${temp.dir}/@{referencefile.name}" extension=".xml" style="leveringid_opdracht.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldId" expression="@{oldId}"/>
            <param name="newId" expression="@{newId}"/>
          </xslt>
          <copy file="${temp.dir}/@{referencefile.name}" tofile="${output.dir}/@{referencefile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>
  
  <target name="doelids" description="Verandert Doelids door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'manifest-ow.xml')]">
        <param name="file.name" path="name/text()"/>
        <param name="doelId" path="../doelId/new/text()"/>
        <param name="oldDoelId" path="../doelId/old/text()"/>
        <actions>
          <xslt in="${output.dir}/@{file.name}" out="${temp.dir}/@{file.name}" extension=".xml" style="doelids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="doelId" expression="@{doelId}"/>
            <param name="oldDoelId" expression="@{oldDoelId}"/>
          </xslt>
          <copy file="${temp.dir}/@{file.name}" tofile="${output.dir}/@{file.name}"/>
        </actions>
      </call>
    </xmltask>
    
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'besluit.xml')]">
        <param name="file.name" path="name/text()"/>
        <param name="doelId" path="../doelId/text()"/>
        <param name="oldDoelId" path="../doelId/old/text()"/>
        <actions>
          <xslt in="${output.dir}/@{file.name}" out="${temp.dir}/@{file.name}" extension=".xml" style="doelids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="doelId" expression="@{doelId}"/>
            <param name="oldDoelId" expression="@{oldDoelId}"/>
          </xslt>
          <copy file="${temp.dir}/@{file.name}" tofile="${output.dir}/@{file.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>
    
    <target name="besluitregelingids" description="Verandert Besluit en RegelingsIds door er een datum/tijd string in het vrij invulbare deel te zetten.">
      <!-- BESLUIT -->
      <!-- REGELING -->
      <xmltask source="${temp.dir}/index.xml">
        <call path="index">
          <param name="besluit.name" path="file[contains(@type,'besluit.xml')]/name/text()"/>
          <param name="manifest-ow.name" path="file[contains(@type,'manifest-ow.xml')]/name/text()"/>
          <param name="besluitFrbrWork" path="besluitId/FRBRWork/text()"/>
          <param name="besluitFrbrExpression" path="besluitId/FRBRExpression/text()"/>
          <param name="regelingFrbrWork" path="regelingId/FRBRWork/text()"/>
          <param name="regelingFrbrExpression" path="regelingId/FRBRExpression/text()"/>
          <param name="wordt" path="besluit/versies/wordt/text()"/>
          <param name="instrumentversie" path="besluit/instrumentversie/text()"/>
          <param name="oldBesluitFrbrWork" path="besluitId/oldFRBRWork/text()"/>
          <param name="oldBesluitFrbrExpression" path="besluitId/oldFRBRExpression/text()"/>
          <param name="oldRegelingFrbrWork" path="regelingId/oldFRBRWork/text()"/>
          <param name="oldRegelingFrbrExpression" path="regelingId/oldFRBRExpression/text()"/>
          <param name="oldWordt" path="besluit/versies/oldWordt/text()"/>
          <param name="oldInstrumentversie" path="besluit/oldInstrumentversie/text()"/>
          <actions>
            <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
              <classpath location="saxon9he.jar" />
              <param name="oldBesluitFrbrWork" expression="@{oldBesluitFrbrWork}"/>
              <param name="oldBesluitFrbrExpression" expression="@{oldBesluitFrbrExpression}"/>
              <param name="oldRegelingFrbrWork" expression="@{oldRegelingFrbrWork}"/>
              <param name="oldRegelingFrbrExpression" expression="@{oldRegelingFrbrExpression}"/>
              <param name="oldWordt" expression="@{oldWordt}"/>
              <param name="oldInstrumentversie" expression="@{oldInstrumentversie}"/>
              <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
              <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
              <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
              <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
              <param name="wordt" expression="@{wordt}"/>
              <param name="instrumentversie" expression="@{instrumentversie}"/>
            </xslt>
            <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
            <xslt in="${output.dir}/@{manifest-ow.name}" out="${temp.dir}/@{manifest-ow.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
              <classpath location="saxon9he.jar" />
              <param name="oldBesluitFrbrWork" expression="@{oldBesluitFrbrWork}"/>
              <param name="oldBesluitFrbrExpression" expression="@{oldBesluitFrbrExpression}"/>
              <param name="oldRegelingFrbrWork" expression="@{oldRegelingFrbrWork}"/>
              <param name="oldRegelingFrbrExpression" expression="@{oldRegelingFrbrExpression}"/>
              <param name="oldWordt" expression="@{oldWordt}"/>
              <param name="oldInstrumentversie" expression="@{oldInstrumentversie}"/>
              <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
              <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
              <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
              <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
              <param name="wordt" expression="@{wordt}"/>
              <param name="instrumentversie" expression="@{instrumentversie}"/>
            </xslt>
            <copy file="${temp.dir}/@{manifest-ow.name}" tofile="${output.dir}/@{manifest-ow.name}"/>
          </actions>
        </call>
      </xmltask>
      <!-- Wordt -->
      <xmltask source="${temp.dir}/index.xml">
        <call path="index/besluit/versies/wordt">
          <param name="besluit.name" path="../../../file[contains(@type,'besluit.xml')]/name/text()"/>
          <param name="oldWordt" path="old/text()"/>
          <param name="newWordt" path="new/text()"/>
          <actions>
            <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="wordt.xsl" processor="trax" force="true">
              <classpath location="saxon9he.jar"/>
              <param name="oldWordt" expression="@{oldWordt}"/>
              <param name="newWordt" expression="@{newWordt}"/>
            </xslt>
            <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
          </actions>
        </call>
      </xmltask>
      <!-- GIO's -->
      <xmltask source="${temp.dir}/index.xml">
        <call path="index/file[contains(@type,'gio.xml')]">
          <param name="giofile.name" path="name/text()"/>
          <param name="besluitFrbrWork" path="../besluitId/FRBRWork/text()"/>
          <param name="besluitFrbrExpression" path="../besluitId/FRBRExpression/text()"/>
          <param name="regelingFrbrWork" path="../regelingId/FRBRWork/text()"/>
          <param name="regelingFrbrExpression" path="../regelingId/FRBRExpression/text()"/>
          <param name="wordt" path="../besluit/versies/wordt/text()"/>
          <param name="instrumentversie" path="../besluit/instrumentversie/text()"/>
          <param name="oldBesluitFrbrWork" path="../besluitId/oldFRBRWork/text()"/>
          <param name="oldBesluitFrbrExpression" path="../besluitId/oldFRBRExpression/text()"/>
          <param name="oldRegelingFrbrWork" path="../regelingId/oldFRBRWork/text()"/>
          <param name="oldRegelingFrbrExpression" path="../regelingId/oldFRBRExpression/text()"/>
          <param name="oldWordt" path="../besluit/versies/oldWordt/text()"/>
          <param name="oldInstrumentversie" path="../besluit/oldInstrumentversie/text()"/>
          <actions>
            <xslt in="${output.dir}/@{giofile.name}" out="${temp.dir}/@{giofile.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
              <classpath location="saxon9he.jar" />
              <param name="oldBesluitFrbrWork" expression="@{oldBesluitFrbrWork}"/>
              <param name="oldBesluitFrbrExpression" expression="@{oldBesluitFrbrExpression}"/>
              <param name="oldRegelingFrbrWork" expression="@{oldRegelingFrbrWork}"/>
              <param name="oldRegelingFrbrExpression" expression="@{oldRegelingFrbrExpression}"/>
              <param name="oldWordt" expression="@{oldWordt}"/>
              <param name="oldInstrumentversie" expression="@{oldInstrumentversie}"/>
              <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
              <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
              <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
              <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
              <param name="wordt" expression="@{wordt}"/>
              <param name="instrumentversie" expression="@{instrumentversie}"/>
            </xslt>
            <copy file="${temp.dir}/@{giofile.name}" tofile="${output.dir}/@{giofile.name}"/>
          </actions>
        </call>
      </xmltask>
    </target>
  
  <target name="informatieobjectRefs" description="Vervangt de GIO-objctrefs in besluit, gio's en gml's">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/besluit/informatieobjectRef">
        <param name="besluit.name" path="../../file[contains(@type,'besluit.xml')]/name/text()"/>
        <param name="oldIoRefId" path="oldIoRefId/text()"/>
        <param name="newIoRefId" path="newIoRefId/text()"/>
        <param name="oldIoWorkId" path="oldIoWorkId/text()"/>
        <param name="newIoWorkId" path="newIoWorkId/text()"/>
        <param name="gmlFile" path="gml/file/text()"/>
        <param name="gioFile" path="gio/file/text()"/>
        <actions>
          <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
          <xslt in="${output.dir}/@{gmlFile}" out="${temp.dir}/@{gmlFile}" extension=".gml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{gmlFile}" tofile="${output.dir}/@{gmlFile}"/>
          <xslt in="${output.dir}/@{gioFile}" out="${temp.dir}/@{gioFile}" extension=".xml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{gioFile}" tofile="${output.dir}/@{gioFile}"/>
        </actions>
      </call>
    </xmltask>
  </target>
    
    
  <target name="checksum_gio" description="Gebruikt de informatie van de interne ANT checksum functionaliteit.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'gio.xml')]">
        <param name="giofile.name" path="name/text()"/>
        <actions>
          <xslt in="${output.dir}/@{giofile.name}" out="${temp.dir}/@{giofile.name}" extension=".xml" style="checksum_hash.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar" />
            <param name="temp.dir" expression="${temp.dir}"/>
          </xslt>
          <copy file="${temp.dir}/@{giofile.name}" tofile="${output.dir}/@{giofile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>
  
  <!-- maak hash-code -->
  
  <target name="checksum" description="Maak hash-codes">
    <foreach target="checksum.execute" param="file.fullname">
      <path>
        <fileset dir="${temp.dir}"/>
      </path>
    </foreach>
  </target>
  
  <target name="checksum.execute">
    <basename property="file.name" file="${file.fullname}"/>
    <checksum file="${file.fullname}" algorithm="SHA-512" property="file.checksum"/>
    <xslt in="template.xml" out="${temp.dir}/checksum/${file.name}.xml" style="checksum.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar" />
      <param name="file.name" expression="${file.name}"/>
      <param name="file.fullname" expression="${file.fullname}"/>
      <param name="file.checksum" expression="${file.checksum}"/>
    </xslt>
  </target>
    
  <!-- totale transformatie -->

    <target name="main" description="Totale transformatie" 
      depends="init, copy, index, owids, guids, leveringid_opdrachtparameters, doelids, besluitregelingids, informatieobjectRefs, checksum, checksum_gio"/>
  <!-- , guids, leveringid_opdrachtparameters, doelids, besluitregelingids, informatieobjectRefs, checksum, checksum_gio -->

</project>
